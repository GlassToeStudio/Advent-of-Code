from computer import Computer

with open('input17', 'r') as data:
    data = list(map(int, data.read().split(',')))


tape = Computer(int_code=data)
tape.compute()
print(' '.join(map(chr, reversed(tape.out))))
video = ''.join(map(chr, reversed(tape.out))).splitlines()
sum_ = 0
for y, (t, m, b) in enumerate(zip(video, video[1:], video[2:]), start=1):
    for x, (    t_,
           (m1, m2, m3),
                b_    ) in enumerate(zip(t[1:], zip(m, m[1:], m[2:]), b[1:]), start=1):
        if t_ == m1 == m2 == m3 == b_ == '#':
            sum_ += x * y

print(sum_) # Part 1


"""
 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . # # # # # # # . . . . . .
 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . # . . . . . # . . . . . .
 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . # . . . . . # . . . . . .
 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . # . . . . . # . . . . . .
 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . # . . . . . # . . . . . .
 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . # . . . . . # . . . . . .
 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . # . . . . . # . . . . . .
 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . # . . . . . # . . . . . .
 . . . . . . . . . . . . . . # # # # # # # # # . . . . . . . . . # # # # # # # . . . . . # . . . . . .
 . . . . . . . . . . . . . . . . . . . . . . # . . . . . . . . . # . . . . . . . . . . . # . . . . . .
 . . . . . . . . . . . . . . . . . . . . . . # . . . . . . . . . # . . . . . . . . . # # # # # # # # #
 . . . . . . . . . . . . . . . . . . . . . . # . . . . . . . . . # . . . . . . . . . # . # . . . . . #
 . . . . . . . . . . . . . . . . . . . . . . # . . . . . . . . . # . . . . . # # # # # # # . . . . . #
 . . . . . . . . . . . . . . . . . . . . . . # . . . . . . . . . # . . . . . # . . . # . . . . . . . #
 . . . . . . . . . . . . . . . . . . . . . . # # # # # # # # # # # # # . . . # . . . # . . . . . . . #
 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . # . # . . . # . . . # . . . . . . . #
 # # # # # # # # # # # # ^ . . . . . . . . . . . . . . . . . . . # # # # # # # # # . # . . . . . . . #
 # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . # . . . # . # . # . . . . . . . #
 # . . . . . . . . . . . . . . . . . # # # # # # # . . . . . . . . . # . . . # # # # # . # # # # # # #
 # . . . . . . . . . . . . . . . . . # . . . . . # . . . . . . . . . # . . . . . # . . . # . . . . . .
 # . . . . . . . . . . . . . . . # # # # # . . . # . . . . . . . . . # # # # # # # . . . # . . . . . .
 # . . . . . . . . . . . . . . . # . # . # . . . # . . . . . . . . . . . . . . . . . . . # . . . . . .
 # # # # # # # # # . . . . . . . # . # # # # # # # # # . . . . . . . . . . . . . . . . . # . . . . . .
 . . . . . . . . # . . . . . . . # . . . # . . . # . # . . . . . . . . . . . . . . . . . # . . . . . .
 . . . . . . . . # . . . . . . . # . . . # . . . # # # # # # # # # # # # # . . . . . . . # . . . . . .
 . . . . . . . . # . . . . . . . # . . . # . . . . . # . . . . . . . . . # . . . . . . . # . . . . . .
 . . . . . . . . # . . . . . # # # # # # # . . . . . # . . . . . . . . . # . . . . . . . # . . . . . .
 . . . . . . . . # . . . . . # . # . . . . . . . . . # . . . . . . . . . # . . . . . . . # . . . . . .
 . . . . . . . . # # # # # # # # # . . . . . . . . . # . . . . . . . . . # . . . . . . . # . . . . . .
 . . . . . . . . . . . . . . # . . . . . . . . . . . # . . . . . . . . . # . . . . . . . # . . . . . .
 . . . . . . . . . . . . . . # . . . . . # # # # # # # . . . . . . . . . # # # # # # # # # . . . . . .
 . . . . . . . . . . . . . . # . . . . . # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
 . . . . . . . . . . . . . . # . . . . . # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
 . . . . . . . . . . . . . . # . . . . . # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
 . . . . . . . . . . . . . . # . . . . . # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
 . . . . . . . . . . . . . . # . . . . . # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
 . . . . . . . . . . . . . . # . . . . . # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
 . . . . . . . . . . . . . . # . . . . . # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
 . . . . . . . . . . . . . . # # # # # # # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
"""

'B,A,B,A,C,C,A,B,A,C\n' # Main
'L,8,L,8,R,4,R,6,R,6\n' # A
'L,12,L,6,L,8,R,6\n' # B
'L,12,R,6,L,8\n' # C

tape.int_code[0] = 2
functions = 'B,A,B,A,C,C,A,B,A,C\nL,8,L,8,R,4,R,6,R,6\nL,12,L,6,L,8,R,6\nL,12,R,6,L,8\nn\n'
tape.compute(feed=map(ord, functions))
print(tape.out.popleft()) # Part 2